<?xml version="1.0" encoding="UTF-8"?>

<applicationtype xmlns="http://www.activecomponents.org/jadex-application"
                 xmlns:agr="http://www.activecomponents.org/jadex-agrspace"
                 xmlns:env="http://www.activecomponents.org/jadex-envspace"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://www.activecomponents.org/jadex-application http://www.activecomponents.org/jadex-application-${jadex_build_version}.xsd
                 http://www.activecomponents.org/jadex-envspace http://www.activecomponents.org/jadex-envspace-${jadex_build_version}.xsd"
                 name="titan" package="masd_jadex.titan">
    <imports>
        <import>jadex.extension.envsupport.environment.space2d.*</import>
        <import>jadex.extension.envsupport.environment.DeltaTimeExecutor</import>
        <import>jadex.extension.envsupport.math.*</import>
        <import>jadex.extension.envsupport.dataview.*</import>
        <import>java.text.SimpleDateFormat</import>
        <import>java.util.Date</import>
        <import>jadex.extension.envsupport.observer.perspective.*</import>
        <import>masd_jadex.titan.tasks.*</import>
        <import>masd_jadex.titan.agents.*</import>
        <import>masd_jadex.titan.model.GlobalIds</import>
        <import>jadex.extension.envsupport.evaluation.*</import>
        <import>jadex.extension.envsupport.observer.gui.plugin.*</import>
        <import>jadex.commons.future.*</import>
        <import>jadex.bridge.service.*</import>
        <import>jadex.bridge.service.search.*</import>
        <import>jadex.bridge.service.types.clock.IClockService</import>
        <import>jadex.bridge.service.component.*</import>
    </imports>
    <extensiontypes>
        <env:envspacetype name="2dspace" class="ContinuousSpace2D" width="100" height="100"><!--meters-->
            <env:property name="targetradius" class="double">1.0</env:property>
            <env:property name="energy_per_meter" class="double">1.0</env:property>
            <env:property name="energy_per_kg" class="double">1.0</env:property>

            <env:property name="border">Space2D.BORDER_RELAXED</env:property> <!--objects can wander off the map infinitely -->

            <env:objecttypes>
                <env:objecttype name="ChargingStation">
                    <env:property name="speed" class="double">1</env:property> <!--m/s -->
                    <env:property name="position" class="IVector2"/>
                </env:objecttype>
                <env:objecttype name="Supervisor">
                    <env:property name="position" class="IVector2" dynamic="true">$space.getSpaceObjectsByType("ChargingStation")[0].getProperty("position")</env:property>
                </env:objecttype>
                <env:objecttype name="MiningSite">
                    <env:property name="id" class="int">GlobalIds.getNewId()</env:property>
                    <env:property name="initial_ore" class="float"/>
                    <env:property name="remaining_ore" class="float"/>
                    <env:property name="depleted" class="boolean" dynamic="true">
                        $object.getProperty("remaining_ore") &lt;= 0.0
                    </env:property>
                    <env:property name="num_slots" class="int">1</env:property>
                    <env:property name="discovered" class="boolean">false</env:property>
                </env:objecttype>
                <env:objecttype name="Miner">
                    <env:property name="speed" class="double">10</env:property> <!--m/s -->
                    <env:property name="position" class="IVector2">$space.getSpaceObjectsByType("ChargingStation")[0].getProperty("position")</env:property>
                    <env:property name="capacity" class="float">1000</env:property> <!-- kg -->
                </env:objecttype>
                <env:objecttype name="Ore">
                    <env:property name="marked" class="boolean">false</env:property>
                </env:objecttype>
            </env:objecttypes>

            <env:tasktypes>
                <env:tasktype name="move" class="MoveTask" />
                <env:tasktype name="takeMiningSlot" class="TakeMiningSlotTask" />
                <env:tasktype name="drillForOre" class="DrillForOreTask" />
                <env:tasktype name="freeMiningSlot" class="FreeMiningSlotTask" />
            </env:tasktypes>

            <env:dataviews>
                <env:dataview name="all_view" class="GeneralDataView2D" />
            </env:dataviews>

            <env:avatarmappings>
                <env:avatarmapping componenttype="Miner" objecttype="Miner" />
                <env:avatarmapping componenttype="Supervisor" objecttype="Supervisor" />
            </env:avatarmappings>

            <env:perspectives>
                <env:perspective name="icons" class="Perspective2D" >
                    <!-- Charging Station -->
                    <env:drawable objecttype="ChargingStation" width="10" height="10">
                        <env:texturedrectangle imagepath="masd_jadex/titan/solar.png" layer="0"/>
                    </env:drawable>

                    <!--Mining Site  -->
                    <env:drawable objecttype="MiningSite" width="20" height="20">
                        <env:property name="slots_size" dynamic="true">$object.getProperty("num_slots")</env:property>
                        <env:property name="remaining_ore_size" dynamic="true">new Vector2Double($object.getProperty("remaining_ore")/$object.getProperty("initial_ore"))</env:property>
                        <env:ellipse size="remaining_ore_size" layer="1" color="#88880088">
                            <env:drawcondition>$object.getProperty("discovered")</env:drawcondition>
                        </env:ellipse>
                        <env:rectangle width="0.2" height="0.2" color="#888888" layer="0">
                            <env:drawcondition>$object.getProperty("discovered")</env:drawcondition>
                        </env:rectangle>
                        <env:ellipse width="0.1" height="0.1" color="#88888888" layer="0">
                            <env:drawcondition>!$object.getProperty("discovered")</env:drawcondition>
                        </env:ellipse>
                    </env:drawable>
                    <!-- Miner -->
                    <env:drawable objecttype="Miner" width="2" height="2">
                        <env:ellipse width="1" height="1" color="#000000FF" />
                    </env:drawable>
                    <!-- Miner -->
                    <env:drawable objecttype="Ore" width="2" height="2">
                        <env:rectangle width="1" height="1" color="#FF0000FF" />
                    </env:drawable>
                </env:perspective>

            </env:perspectives>

            <env:spaceexecutor class="DeltaTimeExecutor">
                <env:property name="space">$space</env:property>
                <env:property name="tick">true</env:property>
            </env:spaceexecutor>

        </env:envspacetype>
    </extensiontypes>

    <componenttypes>
        <componenttype name="Miner" filename="masd_jadex/titan/agents/Miner.class"/>
        <componenttype name="Supervisor" filename="masd_jadex/titan/agents/Supervisor.class"/>
    </componenttypes>

    <configurations>
        <configuration name="1 ChargingStation / 3 Mining Sites / 1 Supervisor Todo: ...">
            <extensions>
                <env:envspace name="titan" type="2dspace">
                    <env:objects>
                        <env:object type="ChargingStation">
                            <env:property name="position">new Vector2Double(50.0, 50.0)</env:property>
                        </env:object>
                        <env:object type="Supervisor"/>
                        <env:object type="MiningSite">
                            <env:property name="position">new Vector2Double(60, 32)</env:property>
                            <env:property name="remaining_ore">5</env:property>
                            <env:property name="initial_ore">10</env:property>
                        </env:object>
                        <env:object type="MiningSite">
                            <env:property name="position">new Vector2Double(3, 3)</env:property>
                            <env:property name="remaining_ore">10</env:property>
                            <env:property name="initial_ore">10</env:property>
                        </env:object>
                        <env:object type="MiningSite">
                            <env:property name="position">new Vector2Double(20, 80)</env:property>
                            <env:property name="remaining_ore">3</env:property>
                            <env:property name="initial_ore">4</env:property>
                            <env:property name="discovered">true</env:property>
                        </env:object>
                    </env:objects>

<!--                    <env:dataproviders>-->
<!--                        <env:dataprovider name="available_ore">-->
<!--                            <env:source name="$MiningSite" objecttype="MiningSite"/>-->
<!--                            <env:data name="available_ore_amount">$MiningSite.remaining_ore</env:data>-->
<!--                            <env:data name="time">$time</env:data>-->
<!--                        </env:dataprovider>-->
<!--                    </env:dataproviders>-->

<!--                    <env:dataconsumers>-->
<!--                        <env:dataconsumer name="ore_chart" class="XYChartDataConsumer">-->
<!--                            <env:property name="dataprovider">"available_ore"</env:property>-->
<!--                            <env:property name="title">"Ore available in Mining Site"</env:property>-->
<!--                            <env:property name="labelx">"Time"</env:property>-->
<!--                            <env:property name="labely">"Ore"</env:property>-->
<!--                            <env:property name="maxitemcount">500</env:property>-->
<!--                            <env:property name="legend">false</env:property>-->

<!--                            &lt;!&ndash; Defines a normal series. &ndash;&gt;-->
<!--                            <env:property name="seriesname">"Ore"</env:property>-->
<!--                            <env:property name="valuex">"time"</env:property>-->
<!--                            <env:property name="valuey">"available_ore_amount"</env:property>-->
<!--                        </env:dataconsumer>-->
<!--                    </env:dataconsumers>-->

                    <env:observers>
                        <env:observer name="Titan" dataview="view_all" perspective="icons">
<!--                            <env:plugin name="evaluation" class="EvaluationPlugin">-->
<!--&lt;!&ndash;                                <env:property name="component_0">((AbstractChartDataConsumer)$space.getDataConsumer("ore_chart")).getChartPanel()</env:property>&ndash;&gt;-->
<!--                            </env:plugin>-->
                        </env:observer>
                    </env:observers>
                </env:envspace>
            </extensions>
            <components>
                <component type="Miner" number="2"/>
                <component type="Supervisor" number="1"/>
<!--                <component type="Carry" number="3"/>-->
            </components>
        </configuration>

<!--        <configuration name="Multi">-->
<!--            <extensions>-->
<!--                <env:envspace name="myspace" type="2dspace" width="2" height ="2">-->
<!--                    <env:objects>-->
<!--                        <env:object type="homebase">-->
<!--                            <env:property name="space">$space</env:property>&lt;!&ndash; hack!!! &ndash;&gt;-->
<!--                            <env:property name="missiontime">-->
<!--                                3000000 + ((IClockService)$component.getFeature(IRequiredServicesFeature.class).searchLocalService(new ServiceQuery( IClockService.class, ServiceScope.PLATFORM))).getTime()-->
<!--                            </env:property>-->
<!--                        </env:object>-->
<!--                        <env:object type="target" number="20">-->
<!--                            <env:property name="ore">Math.random()>0.2 ? (Integer)(5+Math.random()*35)*5 : 0</env:property>-->
<!--                        </env:object>-->
<!--                    </env:objects>-->
<!--                    <env:observers>-->
<!--                        <env:observer name="MarsWorld" dataview="view_all" perspective="icons"/>-->
<!--                    </env:observers>-->
<!--                </env:envspace>-->
<!--            </extensions>-->
<!--            <components>-->
<!--                <component type="Sentry" number="1"/> &lt;!&ndash; todo: support more than one sentry (requires coordination between sentries) &ndash;&gt;-->
<!--                <component type="Producer" number="5"/>-->
<!--                <component type="Carry" number="10"/>-->
<!--            </components>-->
<!--        </configuration>-->
    </configurations>

</applicationtype>
